/*
 * Coinprofile business API
 * Coinprofile business API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.TransactionGetDetailsResponse;
import com.konfigthis.client.model.TransactionGetUserTransactionSummaryResponse;
import com.konfigthis.client.model.TransactionGetUserTransactionsResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TransactionApi
 */
@Disabled
public class TransactionApiTest {

    private static TransactionApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new TransactionApi(apiClient);
    }

    /**
     * Get a transaction
     *
     * Get a transaction
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDetailsTest() throws ApiException {
        String transactionId = null;
        TransactionGetDetailsResponse response = api.getDetails(transactionId)
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieve user&#39;s transaction summary
     *
     * Retrieves all user transactions summary
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getUserTransactionSummaryTest() throws ApiException {
        String currency = null;
        String type = null;
        Double page = null;
        Double limit = null;
        Double duration = null;
        TransactionGetUserTransactionSummaryResponse response = api.getUserTransactionSummary()
                .currency(currency)
                .type(type)
                .page(page)
                .limit(limit)
                .duration(duration)
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieve user&#39;s transaction records
     *
     * Retrieves all user transactions
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getUserTransactionsTest() throws ApiException {
        String currency = null;
        String type = null;
        Double page = null;
        Double limit = null;
        Double duration = null;
        TransactionGetUserTransactionsResponse response = api.getUserTransactions()
                .currency(currency)
                .type(type)
                .page(page)
                .limit(limit)
                .duration(duration)
                .execute();
        // TODO: test validations
    }

}
