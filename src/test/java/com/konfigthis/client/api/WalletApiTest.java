/*
 * Coinprofile business API
 * Coinprofile business API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.WalletExecuteTransferRequest;
import com.konfigthis.client.model.WalletExecuteTransferResponse;
import com.konfigthis.client.model.WalletGetAddressesResponse;
import com.konfigthis.client.model.WalletGetSupportedConfigResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for WalletApi
 */
@Disabled
public class WalletApiTest {

    private static WalletApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new WalletApi(apiClient);
    }

    /**
     * Wallet transfer
     *
     * Transfer crypto from one wallet address to another
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void executeTransferTest() throws ApiException {
        String address = null;
        Double amount = null;
        String currency = null;
        String network = null;
        String memo = null;
        String walletType = null;
        WalletExecuteTransferResponse response = api.executeTransfer(address, amount, currency, network)
                .memo(memo)
                .walletType(walletType)
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieves a user&#39;s crypto wallet addresses
     *
     * get wallet
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAddressesTest() throws ApiException {
        String currency = null;
        String network = null;
        WalletGetAddressesResponse response = api.getAddresses()
                .currency(currency)
                .network(network)
                .execute();
        // TODO: test validations
    }

    /**
     * Get supported cryptocurrencies and network
     *
     * Get supported cryptocurrencies and networks
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSupportedConfigTest() throws ApiException {
        WalletGetSupportedConfigResponse response = api.getSupportedConfig()
                .execute();
        // TODO: test validations
    }

}
