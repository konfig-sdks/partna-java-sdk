/*
 * Coinprofile business API
 * Coinprofile business API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.MerchantsGetRecordResponse;
import com.konfigthis.client.model.MerchantsUpdateRecordRequest;
import com.konfigthis.client.model.MerchantsUpdateRecordResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MerchantsApi
 */
@Disabled
public class MerchantsApiTest {

    private static MerchantsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new MerchantsApi(apiClient);
    }

    /**
     * Retrieve merchant record
     *
     * Retrieves merchant record - username, email, callback URL, merchant logo, creditCurrency, API key expiry date-time
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRecordTest() throws ApiException {
        MerchantsGetRecordResponse response = api.getRecord()
                .execute();
        // TODO: test validations
    }

    /**
     * Update merchant record
     *
     * Updates merchant record
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateRecordTest() throws ApiException {
        String callbackUrl = null;
        String creditCurrency = null;
        String feeBearer = null;
        String logo = null;
        MerchantsUpdateRecordResponse response = api.updateRecord()
                .callbackUrl(callbackUrl)
                .creditCurrency(creditCurrency)
                .feeBearer(feeBearer)
                .logo(logo)
                .execute();
        // TODO: test validations
    }

}
