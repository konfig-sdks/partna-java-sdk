/*
 * Coinprofile business API
 * Coinprofile business API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * BankAccountVerifyAndReturnDetailsResponseData
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class BankAccountVerifyAndReturnDetailsResponseData {
  public static final String SERIALIZED_NAME_ACCOUNTNAME = "accountname";
  @SerializedName(SERIALIZED_NAME_ACCOUNTNAME)
  private String accountname;

  public static final String SERIALIZED_NAME_ACCOUNTNUMBER = "accountnumber";
  @SerializedName(SERIALIZED_NAME_ACCOUNTNUMBER)
  private String accountnumber;

  public static final String SERIALIZED_NAME_CODE = "code";
  @SerializedName(SERIALIZED_NAME_CODE)
  private String code;

  public static final String SERIALIZED_NAME_COUNTRY = "country";
  @SerializedName(SERIALIZED_NAME_COUNTRY)
  private String country;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private String createdAt;

  public static final String SERIALIZED_NAME_CURRENCY = "currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  private String currency;

  public static final String SERIALIZED_NAME_DELETED_AT = "deleted_at";
  @SerializedName(SERIALIZED_NAME_DELETED_AT)
  private String deletedAt;

  public static final String SERIALIZED_NAME_INTERNALREFERENCE = "internalreference";
  @SerializedName(SERIALIZED_NAME_INTERNALREFERENCE)
  private String internalreference;

  public static final String SERIALIZED_NAME_IS_TRASHED = "is_trashed";
  @SerializedName(SERIALIZED_NAME_IS_TRASHED)
  private String isTrashed;

  public static final String SERIALIZED_NAME_IS_VISIBLE = "is_visible";
  @SerializedName(SERIALIZED_NAME_IS_VISIBLE)
  private String isVisible;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PHONENUMBER = "phonenumber";
  @SerializedName(SERIALIZED_NAME_PHONENUMBER)
  private String phonenumber;

  public static final String SERIALIZED_NAME_RESPONSECODE = "responsecode";
  @SerializedName(SERIALIZED_NAME_RESPONSECODE)
  private String responsecode;

  public static final String SERIALIZED_NAME_RESPONSEMESSAGE = "responsemessage";
  @SerializedName(SERIALIZED_NAME_RESPONSEMESSAGE)
  private String responsemessage;

  public static final String SERIALIZED_NAME_UNIQUEREFERENCE = "uniquereference";
  @SerializedName(SERIALIZED_NAME_UNIQUEREFERENCE)
  private String uniquereference;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updated_at";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private String updatedAt;

  public BankAccountVerifyAndReturnDetailsResponseData() {
  }

  public BankAccountVerifyAndReturnDetailsResponseData accountname(String accountname) {
    
    
    
    
    this.accountname = accountname;
    return this;
  }

   /**
   * Get accountname
   * @return accountname
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAccountname() {
    return accountname;
  }


  public void setAccountname(String accountname) {
    
    
    
    this.accountname = accountname;
  }


  public BankAccountVerifyAndReturnDetailsResponseData accountnumber(String accountnumber) {
    
    
    
    
    this.accountnumber = accountnumber;
    return this;
  }

   /**
   * Get accountnumber
   * @return accountnumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAccountnumber() {
    return accountnumber;
  }


  public void setAccountnumber(String accountnumber) {
    
    
    
    this.accountnumber = accountnumber;
  }


  public BankAccountVerifyAndReturnDetailsResponseData code(String code) {
    
    
    
    
    this.code = code;
    return this;
  }

   /**
   * Get code
   * @return code
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCode() {
    return code;
  }


  public void setCode(String code) {
    
    
    
    this.code = code;
  }


  public BankAccountVerifyAndReturnDetailsResponseData country(String country) {
    
    
    
    
    this.country = country;
    return this;
  }

   /**
   * Get country
   * @return country
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCountry() {
    return country;
  }


  public void setCountry(String country) {
    
    
    
    this.country = country;
  }


  public BankAccountVerifyAndReturnDetailsResponseData createdAt(String createdAt) {
    
    
    
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(String createdAt) {
    
    
    
    this.createdAt = createdAt;
  }


  public BankAccountVerifyAndReturnDetailsResponseData currency(String currency) {
    
    
    
    
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCurrency() {
    return currency;
  }


  public void setCurrency(String currency) {
    
    
    
    this.currency = currency;
  }


  public BankAccountVerifyAndReturnDetailsResponseData deletedAt(String deletedAt) {
    
    
    
    
    this.deletedAt = deletedAt;
    return this;
  }

   /**
   * Get deletedAt
   * @return deletedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDeletedAt() {
    return deletedAt;
  }


  public void setDeletedAt(String deletedAt) {
    
    
    
    this.deletedAt = deletedAt;
  }


  public BankAccountVerifyAndReturnDetailsResponseData internalreference(String internalreference) {
    
    
    
    
    this.internalreference = internalreference;
    return this;
  }

   /**
   * Get internalreference
   * @return internalreference
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getInternalreference() {
    return internalreference;
  }


  public void setInternalreference(String internalreference) {
    
    
    
    this.internalreference = internalreference;
  }


  public BankAccountVerifyAndReturnDetailsResponseData isTrashed(String isTrashed) {
    
    
    
    
    this.isTrashed = isTrashed;
    return this;
  }

   /**
   * Get isTrashed
   * @return isTrashed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIsTrashed() {
    return isTrashed;
  }


  public void setIsTrashed(String isTrashed) {
    
    
    
    this.isTrashed = isTrashed;
  }


  public BankAccountVerifyAndReturnDetailsResponseData isVisible(String isVisible) {
    
    
    
    
    this.isVisible = isVisible;
    return this;
  }

   /**
   * Get isVisible
   * @return isVisible
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIsVisible() {
    return isVisible;
  }


  public void setIsVisible(String isVisible) {
    
    
    
    this.isVisible = isVisible;
  }


  public BankAccountVerifyAndReturnDetailsResponseData name(String name) {
    
    
    
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    
    
    
    this.name = name;
  }


  public BankAccountVerifyAndReturnDetailsResponseData phonenumber(String phonenumber) {
    
    
    
    
    this.phonenumber = phonenumber;
    return this;
  }

   /**
   * Get phonenumber
   * @return phonenumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPhonenumber() {
    return phonenumber;
  }


  public void setPhonenumber(String phonenumber) {
    
    
    
    this.phonenumber = phonenumber;
  }


  public BankAccountVerifyAndReturnDetailsResponseData responsecode(String responsecode) {
    
    
    
    
    this.responsecode = responsecode;
    return this;
  }

   /**
   * Get responsecode
   * @return responsecode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getResponsecode() {
    return responsecode;
  }


  public void setResponsecode(String responsecode) {
    
    
    
    this.responsecode = responsecode;
  }


  public BankAccountVerifyAndReturnDetailsResponseData responsemessage(String responsemessage) {
    
    
    
    
    this.responsemessage = responsemessage;
    return this;
  }

   /**
   * Get responsemessage
   * @return responsemessage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getResponsemessage() {
    return responsemessage;
  }


  public void setResponsemessage(String responsemessage) {
    
    
    
    this.responsemessage = responsemessage;
  }


  public BankAccountVerifyAndReturnDetailsResponseData uniquereference(String uniquereference) {
    
    
    
    
    this.uniquereference = uniquereference;
    return this;
  }

   /**
   * Get uniquereference
   * @return uniquereference
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUniquereference() {
    return uniquereference;
  }


  public void setUniquereference(String uniquereference) {
    
    
    
    this.uniquereference = uniquereference;
  }


  public BankAccountVerifyAndReturnDetailsResponseData updatedAt(String updatedAt) {
    
    
    
    
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUpdatedAt() {
    return updatedAt;
  }


  public void setUpdatedAt(String updatedAt) {
    
    
    
    this.updatedAt = updatedAt;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the BankAccountVerifyAndReturnDetailsResponseData instance itself
   */
  public BankAccountVerifyAndReturnDetailsResponseData putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BankAccountVerifyAndReturnDetailsResponseData bankAccountVerifyAndReturnDetailsResponseData = (BankAccountVerifyAndReturnDetailsResponseData) o;
    return Objects.equals(this.accountname, bankAccountVerifyAndReturnDetailsResponseData.accountname) &&
        Objects.equals(this.accountnumber, bankAccountVerifyAndReturnDetailsResponseData.accountnumber) &&
        Objects.equals(this.code, bankAccountVerifyAndReturnDetailsResponseData.code) &&
        Objects.equals(this.country, bankAccountVerifyAndReturnDetailsResponseData.country) &&
        Objects.equals(this.createdAt, bankAccountVerifyAndReturnDetailsResponseData.createdAt) &&
        Objects.equals(this.currency, bankAccountVerifyAndReturnDetailsResponseData.currency) &&
        Objects.equals(this.deletedAt, bankAccountVerifyAndReturnDetailsResponseData.deletedAt) &&
        Objects.equals(this.internalreference, bankAccountVerifyAndReturnDetailsResponseData.internalreference) &&
        Objects.equals(this.isTrashed, bankAccountVerifyAndReturnDetailsResponseData.isTrashed) &&
        Objects.equals(this.isVisible, bankAccountVerifyAndReturnDetailsResponseData.isVisible) &&
        Objects.equals(this.name, bankAccountVerifyAndReturnDetailsResponseData.name) &&
        Objects.equals(this.phonenumber, bankAccountVerifyAndReturnDetailsResponseData.phonenumber) &&
        Objects.equals(this.responsecode, bankAccountVerifyAndReturnDetailsResponseData.responsecode) &&
        Objects.equals(this.responsemessage, bankAccountVerifyAndReturnDetailsResponseData.responsemessage) &&
        Objects.equals(this.uniquereference, bankAccountVerifyAndReturnDetailsResponseData.uniquereference) &&
        Objects.equals(this.updatedAt, bankAccountVerifyAndReturnDetailsResponseData.updatedAt)&&
        Objects.equals(this.additionalProperties, bankAccountVerifyAndReturnDetailsResponseData.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountname, accountnumber, code, country, createdAt, currency, deletedAt, internalreference, isTrashed, isVisible, name, phonenumber, responsecode, responsemessage, uniquereference, updatedAt, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BankAccountVerifyAndReturnDetailsResponseData {\n");
    sb.append("    accountname: ").append(toIndentedString(accountname)).append("\n");
    sb.append("    accountnumber: ").append(toIndentedString(accountnumber)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    deletedAt: ").append(toIndentedString(deletedAt)).append("\n");
    sb.append("    internalreference: ").append(toIndentedString(internalreference)).append("\n");
    sb.append("    isTrashed: ").append(toIndentedString(isTrashed)).append("\n");
    sb.append("    isVisible: ").append(toIndentedString(isVisible)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    phonenumber: ").append(toIndentedString(phonenumber)).append("\n");
    sb.append("    responsecode: ").append(toIndentedString(responsecode)).append("\n");
    sb.append("    responsemessage: ").append(toIndentedString(responsemessage)).append("\n");
    sb.append("    uniquereference: ").append(toIndentedString(uniquereference)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("accountname");
    openapiFields.add("accountnumber");
    openapiFields.add("code");
    openapiFields.add("country");
    openapiFields.add("created_at");
    openapiFields.add("currency");
    openapiFields.add("deleted_at");
    openapiFields.add("internalreference");
    openapiFields.add("is_trashed");
    openapiFields.add("is_visible");
    openapiFields.add("name");
    openapiFields.add("phonenumber");
    openapiFields.add("responsecode");
    openapiFields.add("responsemessage");
    openapiFields.add("uniquereference");
    openapiFields.add("updated_at");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to BankAccountVerifyAndReturnDetailsResponseData
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!BankAccountVerifyAndReturnDetailsResponseData.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BankAccountVerifyAndReturnDetailsResponseData is not found in the empty JSON string", BankAccountVerifyAndReturnDetailsResponseData.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("accountname") != null && !jsonObj.get("accountname").isJsonNull()) && !jsonObj.get("accountname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `accountname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("accountname").toString()));
      }
      if ((jsonObj.get("accountnumber") != null && !jsonObj.get("accountnumber").isJsonNull()) && !jsonObj.get("accountnumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `accountnumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("accountnumber").toString()));
      }
      if ((jsonObj.get("code") != null && !jsonObj.get("code").isJsonNull()) && !jsonObj.get("code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("code").toString()));
      }
      if ((jsonObj.get("country") != null && !jsonObj.get("country").isJsonNull()) && !jsonObj.get("country").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `country` to be a primitive type in the JSON string but got `%s`", jsonObj.get("country").toString()));
      }
      if ((jsonObj.get("created_at") != null && !jsonObj.get("created_at").isJsonNull()) && !jsonObj.get("created_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `created_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("created_at").toString()));
      }
      if ((jsonObj.get("currency") != null && !jsonObj.get("currency").isJsonNull()) && !jsonObj.get("currency").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currency").toString()));
      }
      if ((jsonObj.get("deleted_at") != null && !jsonObj.get("deleted_at").isJsonNull()) && !jsonObj.get("deleted_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deleted_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deleted_at").toString()));
      }
      if ((jsonObj.get("internalreference") != null && !jsonObj.get("internalreference").isJsonNull()) && !jsonObj.get("internalreference").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `internalreference` to be a primitive type in the JSON string but got `%s`", jsonObj.get("internalreference").toString()));
      }
      if ((jsonObj.get("is_trashed") != null && !jsonObj.get("is_trashed").isJsonNull()) && !jsonObj.get("is_trashed").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `is_trashed` to be a primitive type in the JSON string but got `%s`", jsonObj.get("is_trashed").toString()));
      }
      if ((jsonObj.get("is_visible") != null && !jsonObj.get("is_visible").isJsonNull()) && !jsonObj.get("is_visible").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `is_visible` to be a primitive type in the JSON string but got `%s`", jsonObj.get("is_visible").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("phonenumber") != null && !jsonObj.get("phonenumber").isJsonNull()) && !jsonObj.get("phonenumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `phonenumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phonenumber").toString()));
      }
      if ((jsonObj.get("responsecode") != null && !jsonObj.get("responsecode").isJsonNull()) && !jsonObj.get("responsecode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `responsecode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("responsecode").toString()));
      }
      if ((jsonObj.get("responsemessage") != null && !jsonObj.get("responsemessage").isJsonNull()) && !jsonObj.get("responsemessage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `responsemessage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("responsemessage").toString()));
      }
      if ((jsonObj.get("uniquereference") != null && !jsonObj.get("uniquereference").isJsonNull()) && !jsonObj.get("uniquereference").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `uniquereference` to be a primitive type in the JSON string but got `%s`", jsonObj.get("uniquereference").toString()));
      }
      if ((jsonObj.get("updated_at") != null && !jsonObj.get("updated_at").isJsonNull()) && !jsonObj.get("updated_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updated_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updated_at").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BankAccountVerifyAndReturnDetailsResponseData.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BankAccountVerifyAndReturnDetailsResponseData' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BankAccountVerifyAndReturnDetailsResponseData> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BankAccountVerifyAndReturnDetailsResponseData.class));

       return (TypeAdapter<T>) new TypeAdapter<BankAccountVerifyAndReturnDetailsResponseData>() {
           @Override
           public void write(JsonWriter out, BankAccountVerifyAndReturnDetailsResponseData value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public BankAccountVerifyAndReturnDetailsResponseData read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             BankAccountVerifyAndReturnDetailsResponseData instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of BankAccountVerifyAndReturnDetailsResponseData given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of BankAccountVerifyAndReturnDetailsResponseData
  * @throws IOException if the JSON string is invalid with respect to BankAccountVerifyAndReturnDetailsResponseData
  */
  public static BankAccountVerifyAndReturnDetailsResponseData fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BankAccountVerifyAndReturnDetailsResponseData.class);
  }

 /**
  * Convert an instance of BankAccountVerifyAndReturnDetailsResponseData to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

